<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>image processing on Biologically Plausible Programming</title>
    <link>/categories/image-processing/</link>
    <description>Recent content in image processing on Biologically Plausible Programming</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>&amp;copy; 2020. All rights reserved.</copyright>
    <lastBuildDate>Sat, 18 Jul 2020 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="/categories/image-processing/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Semi Automated Image Processing with pyautocv</title>
      <link>/18/07/2020/semi-automated-image-processing-with-pyautocv/</link>
      <pubDate>Sat, 18 Jul 2020 00:00:00 +0000</pubDate>
      
      <guid>/18/07/2020/semi-automated-image-processing-with-pyautocv/</guid>
      <description>In this short post, we take a look at how we can use pyautocv for edge detection. At the time of writing, pyautocv was at version 0.2.1 that was unreleased.
For installation details, please see the documentation of the project.
Pre-requisites
Python &amp;gt;=3.6pyautocvAn image directory for which detection is required.To begin, we import pyautocvâ€™s Segmentation class.
from pyautocv.segmentation import *Next, we change directory to the target directory that holds our images.</description>
    </item>
    
  </channel>
</rss>